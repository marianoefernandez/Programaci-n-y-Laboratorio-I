1) Construir una función llamada "?getDynamicString?" que permita al usuario ingresar un texto y
devuelva un puntero a un espacio de memoria donde esta almacenado el texto ingresado. 
Se requiere el uso de memoria dinámica.

2) Crear una struct con dos campos de cadena de caracteres, uno llamado 'key' y otro llamado 'value'.

struct S_Data
{
  char* key;
  char* value;
};

Hacer una función que reciba el nombre de un archivo y un array de estas estructuras.
La función leerá un archivo de texto con el siguiente formato:

clave=valor
clave=valor

La función deberá leer cada línea del archivo y separar por el caracter '=' la clave y el valor, 
y deberá cargarlo en una struct del array, generando de forma dinámica las variables para almacenar ambas palabras,
 y luego guardando los punteros en la struct. Prototipo de la función:

int loadDataFile(char* fileName,struct S_Data* array, int arrayLen)

La función devolverá la cantidad de items que se cargaron en el array, y nunca se superará el tamaño del array. 

3) Realizar un programa que permita ingresar los datos de una persona (usar funciones de utn.h):

char name[32];
char surname[32];
int  age;

A) Crear un archivo binario llamado BIN.DAT el cual contendrá estructuras con los campos anteriores y
guardar al final del mismo la estructura con los datos ingresados. 
Luego se preguntará si se desea agregar mas datos o salir.

B) Utilizando el archivo BIN.DAT (se supone que tiene datos válidos cargados), 
realizar un programa que permita buscar un apellido que ingresa el usuario y 
una vez encontrado muestre los datos en pantalla. 
De no encontrar el nombre se debe informar por medio de un mensaje de error.

4)Ingresar datos de 1 persona e imprimirlos. Crear la estructura "Persona":

nombre [32]
edad

Si se ingresa 'salir' como nombre, se debe salir del programa, de lo contrario se pedirán los datos de nuevo.
